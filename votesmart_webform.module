<?php

function votesmart_webform_menu()
{
  $items = array();

  // Admin Settings.
  $items['admin/settings/votesmart_webform'] = array(
    'title' => 'Vote Smart Webform',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('votesmart_webform_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'description' => 'Configuration for Vote Smart webform.',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/votesmart_webform/flush_candidates'] = array(
    'title' => 'Flush Candidate Data',
    'page callback' => 'votesmart_webform_flush_candidates',
    'access arguments' => array('administer site configuration'),
    'description' => 'Flush Candidate Data - data will be refreshed via Vote Smart API when needed.',
    'type' => MENU_NORMAL_ITEM
  );

  $items['votesmart_webform/ahah/zip_changed'] = array(
    'title' => 'AHAH Callback for Vote Smart Webform',
    'page callback' => 'votesmart_webform_ahah_zip_changed',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'votesmart_webform.webform.inc'
  );

  return $items;
}

function votesmart_webform_flush_candidates()
{
  //truncate is a non standard SQL command :(
  db_query('DELETE FROM {votesmart_webform_candidates}');
  $msg = '<h3>'.t('Vote Smart candidate data has been flushed').'</h3>';
  $msg .= '<p>'.t('This data will be refreshed by the Vote Smart API when it is needed again').'</p>';
  drupal_set_message($msg); 
  return '';
}

function votesmart_webform_webform_component_info() {
  $components = array();

  //component was originally called votesmart_webform,
  //but it was too long? m got chopped off.
  $components['votesmart'] = array(
    'type' => 'email',
    'label' => t('Vote Smart Lookup'),
    'description' => t('Looks up Representative for Given Zip Code'),
    'features' => array(
      'csv' => FALSE,
      'email' => FALSE,
      'required' => TRUE,
      'conditonal' => FALSE,
    ),
    'file' => 'votesmart_webform.webform.inc'
  );

  return $components;
}

/**
 * Uses same settings and keys as votesmart module
 */
function votesmart_webform_admin_settings() {
  $form = array();
  $form['api'] = array(
    '#type' => 'fieldset',
    '#title' => ('API Settings')
  );
  $form['api']['votesmart_host'] = array(
    '#type' => 'textfield',
    '#title' => t('Votesmart API server'),
    '#description' => t(''),
    '#default_value' => variable_get('votesmart_host', 'http://api.votesmart.org/'),
  );
  $form['api']['votesmart_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Votesmart API key'),
    '#description' => '<a href="http://www.votesmart.org/user_register.php">'.t('Register for Key').'</a>',
    '#default_value' => variable_get('votesmart_key', ''),
  );

  return system_settings_form($form);
}

/**
 * Same Request function used by votesmart module
 */
function _votesmart_webform_api($request, $args = array(), $item = null) {
  $key = variable_get('votesmart_key', '');
  $url = variable_get('votesmart_host', 'http://api.votesmart.org/');

  // Convert arguments into a request string.
  $args = array_merge($args, array('key' => $key));
  $url .= $request . '?';
  foreach ($args as $k => $v) {
    $url .= check_plain($k) . '=' . check_plain($v) . '&';;
  }

  // Contact the REST API.
  $res = drupal_http_request($url);
  $ret = (array) new SimpleXMLElement($res->data, LIBXML_NOCDATA);

  // TODO check $ret['errorMessage']
  if (isset($ret['errorMessage'])) {
    drupal_set_message(t('Vote Smart API error: %err', array('%err' => $ret['errorMessage'])), 'error');
  }

  // Return specified element (e.g. 'details', 'list', etc.);
  if ($item) {
    foreach (explode('.', $item) as $key) {
      $ret = (array) $ret[$key];
    }
  }

  // Nothing specified, return the entire object.
  return $ret;
}

function votesmart_webform_is_zip($zip)
{
  return preg_match('/^[0-9]{5}([- ]?[0-9]{4})?$/', $zip);
}

function votesmart_webform_get_candidate($candidateId)
{
  
  $candidateId.='';//convert to string

  static $candidates;
  if( !isset($candidates) )
    $candidates = array();

  if( !isset($candidates[$candidateId]) )
  {
    $c = array();//candidate array

    $candidate_data = db_result(db_query('SELECT data FROM {votesmart_webform_candidates} WHERE candidate_id = %d LIMIT 1',array($candidateId)));
    if( $candidate_data ) //not in db
    {
      $c = unserialize($candidate_data);
    }
    else
    {
      $c_xml = _votesmart_webform_api('Address.getOfficeWebAddress',array('candidateId'=>$candidateId));


      foreach(explode(' ','title firstName middleName lastName nickName') as $var)
        $c[$var] = $c_xml['candidate']->$var.'';

      foreach($c_xml['address'] as $addr)
       $c[$addr->webAddressType.''] = $addr->webAddress.'';

      //insert into db
      db_query('INSERT INTO {votesmart_webform_candidates} (candidate_id, data) values (%d,\'%s\')',array($candidateId,serialize($c)));
    }

    $candidates[$candidateId] = $c;
  }

  return $candidates[$candidateId];
}

function votesmart_webform_get_candidates_by_zip($zip)
{
  if( !votesmart_webform_is_zip($zip) ) return array();

  $zip = preg_replace('@[^\d]@','',$zip);//trip non digits

  $args = array('zip5' => substr($zip,0,5) );
  if( strlen($zip) == 9 )
    $args['zip4'] = substr($zip,5,9);

  $candidates = _votesmart_webform_api('Officials.getByZip',$args,'candidate');

  $sanitized_candidates = array();
  foreach($candidates as $c)
    $sanitized_candidates[$c->candidateId.''] = votesmart_webform_get_candidate($c->candidateId);

  return $sanitized_candidates;
}
/*
//only needed if attempting to hook into webform 2.x
function votesmart_webform_form_alter(&$form, $form_state, $form_id)
{
  if( $form_id != 'webform_components_form' ) return;

  $form['add']['type']['#options'][] = 'votesmart';
  asort($form['add']['type']['#options']);
}
*/

?>
